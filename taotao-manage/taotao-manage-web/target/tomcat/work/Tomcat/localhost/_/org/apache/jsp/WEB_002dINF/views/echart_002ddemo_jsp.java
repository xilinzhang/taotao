/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.47
 * Generated at: 2017-08-01 15:18:51 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class echart_002ddemo_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\r\n");
      out.write("<title>管理员登录</title>\r\n");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "/commons/common-js.jsp", out, false);
      out.write("\r\n");
      out.write("<script type=\"text/javascript\" src=\"/js/echarts.min.js\"></script>\r\n");
      out.write("</head>\r\n");
      out.write("<body style=\"background-color: #F3F3F3\">\r\n");
      out.write("\t\t<div id=\"myChart\" style=\"width: 600px;height:400px;\"></div> \r\n");
      out.write("    \r\n");
      out.write("</body>\r\n");
      out.write("    <script type=\"text/javascript\">\r\n");
      out.write("\t\t$(function(){\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t // 基于准备好的dom，初始化echarts实例 \r\n");
      out.write("\t\t    var myChart = echarts.init(document.getElementById('myChart')); \r\n");
      out.write("\t\t     \r\n");
      out.write("\t\t    option = { \r\n");
      out.write("\t\t        tooltip: { \r\n");
      out.write("\t\t            trigger: 'item',\r\n");
      out.write("\t\t            formatter: \"{a} <br/>{b}: {c} ({d}%)\" \r\n");
      out.write("\t\t        }, \r\n");
      out.write("\t\t        legend: { \r\n");
      out.write("\t\t            orient: 'horizontal', \r\n");
      out.write("\t\t            left: 'center', \r\n");
      out.write("\t\t            bottom: 0, \r\n");
      out.write("\t\t            data:['直达','其它外链','搜索引擎','直接输入网址或书签','cnblogs.com','微博','微信','百度','谷歌','360','必应','其他'] \r\n");
      out.write("\t\t        }, \r\n");
      out.write("\t\t        series: [ \r\n");
      out.write("\t\t            { \r\n");
      out.write("\t\t                name:'访问来源', //内环 \r\n");
      out.write("\t\t                type:'pie', \r\n");
      out.write("\t\t                selectedMode: 'single', //单一选中模式 \r\n");
      out.write("\t\t                radius: [0, '30%'], //饼图的半径 [内半径，外半径] \r\n");
      out.write("\t\t     \r\n");
      out.write("\t\t                label: { \r\n");
      out.write("\t\t                    normal: { \r\n");
      out.write("\t\t                        position: 'inner' //内置文本标签 \r\n");
      out.write("\t\t                    } \r\n");
      out.write("\t\t                }, \r\n");
      out.write("\t\t                labelLine: { \r\n");
      out.write("\t\t                    normal: { \r\n");
      out.write("\t\t                        show: false     //不需要设置引导线 \r\n");
      out.write("\t\t                    } \r\n");
      out.write("\t\t                }, \r\n");
      out.write("\t\t                data:[ \r\n");
      out.write("\t\t                    {value:335, name:'直达', selected:true}, \r\n");
      out.write("\t\t                    {value:679, name:'其它外链'}, \r\n");
      out.write("\t\t                    {value:1548, name:'搜索引擎'} \r\n");
      out.write("\t\t                ] \r\n");
      out.write("\t\t            }, \r\n");
      out.write("\t\t            { \r\n");
      out.write("\t\t                name:'访问来源', \r\n");
      out.write("\t\t                type:'pie', \r\n");
      out.write("\t\t                radius: ['40%', '55%'], \r\n");
      out.write("\t\t     \r\n");
      out.write("\t\t                data:[ \r\n");
      out.write("\t\t                    {value:335, name:'直接输入网址或书签'}, \r\n");
      out.write("\t\t                    {value:310, name:'cnblogs.com'}, \r\n");
      out.write("\t\t                    {value:234, name:'微博'}, \r\n");
      out.write("\t\t                    {value:135, name:'微信'}, \r\n");
      out.write("\t\t                    {value:1048, name:'百度'}, \r\n");
      out.write("\t\t                    {value:251, name:'谷歌'}, \r\n");
      out.write("\t\t                    {value:147, name:'360'}, \r\n");
      out.write("\t\t                    {value:42, name:'必应'}, \r\n");
      out.write("\t\t                    {value:60, name:'其他'} \r\n");
      out.write("\t\t                ] \r\n");
      out.write("\t\t            } \r\n");
      out.write("\t\t        ] \r\n");
      out.write("\t\t    }; \r\n");
      out.write("\t\t     \r\n");
      out.write("\t\t    // 使用刚指定的配置项和数据显示图表。 \r\n");
      out.write("\t\t    myChart.setOption(option); \r\n");
      out.write("\t\t});\r\n");
      out.write("    </script>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
